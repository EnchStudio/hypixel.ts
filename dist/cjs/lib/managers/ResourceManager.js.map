{"version":3,"sources":["../../../../src/lib/managers/ResourceManager.ts","../../../../src/lib/managers/BaseManager.ts"],"sourcesContent":["import { BaseManager } from './BaseManager';\r\nimport type { Client } from '../Client';\r\nimport type {\r\n\tVanityPetsResponse,\r\n\tAchievementsResponse,\r\n\tChallengesResponse,\r\n\tGameInformationResponse,\r\n\tGuildAchievementsResponse,\r\n\tQuestsResponse,\r\n\tVanityCompanionsResponse\r\n} from '../typings';\r\n\r\n/**\r\n * Resource endpoints.\r\n *\r\n * **Note**: API Key authorization is not required to use this manager.\r\n *\r\n * @category Managers\r\n * @group Managers\r\n */\r\nexport class ResourceManager extends BaseManager {\r\n\tpublic constructor(client: Client) {\r\n\t\tsuper(client, false);\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch information about Hypixel games\r\n\t */\r\n\tpublic async fetchGameInformation() {\r\n\t\treturn this.makeGetRequest<GameInformationResponse>('/resources/games');\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch all achievements\r\n\t */\r\n\tpublic async fetchAchievements() {\r\n\t\treturn this.makeGetRequest<AchievementsResponse>('/resources/achievements');\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch all challenges\r\n\t */\r\n\tpublic async fetchChallenges() {\r\n\t\treturn this.makeGetRequest<ChallengesResponse>('/resources/challenges');\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch all quests\r\n\t */\r\n\tpublic async fetchQuests() {\r\n\t\treturn this.makeGetRequest<QuestsResponse>('/resources/quests');\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch all guild achievements\r\n\t */\r\n\tpublic async fetchGuildAchievements() {\r\n\t\treturn this.makeGetRequest<GuildAchievementsResponse>('/resources/guilds/achievements');\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch all vanity pets\r\n\t */\r\n\tpublic async fetchVanityPets() {\r\n\t\treturn this.makeGetRequest<VanityPetsResponse>('/resources/vanity/pets');\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch all vanity companions\r\n\t */\r\n\tpublic async fetchVanityCompanions() {\r\n\t\treturn this.makeGetRequest<VanityCompanionsResponse>('/resources/vanity/companions');\r\n\t}\r\n}\r\n","import type { Client } from '../Client';\r\n\r\n/**\r\n * The base manager which all other managers extend from\r\n * @category Managers\r\n * @group Managers\r\n */\r\nexport class BaseManager {\r\n\t/**\r\n\t * Whether or not the manager requires API key authorization.\r\n\t */\r\n\tprotected requiresAuth: boolean;\r\n\r\n\t/**\r\n\t * The instantiated hypixel.ts client\r\n\t */\r\n\tprotected client: Client;\r\n\r\n\tpublic constructor(client: Client, requiresAuth: boolean) {\r\n\t\tthis.client = client;\r\n\t\tthis.requiresAuth = requiresAuth;\r\n\t}\r\n\r\n\t/**\r\n\t * Calls the request manager to create (and execute) requests to the API.\r\n\t *\r\n\t * **NOTE**: Do not directly use this method unless you know what you are doing. Consider using the methods provided in the managers.\r\n\t * @param path The path/endpoint of the request\r\n\t * @private\r\n\t */\r\n\tprotected async makeGetRequest<T>(path: string) {\r\n\t\treturn this.client.requests.execute<T>(path, this.requiresAuth);\r\n\t}\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACOO,IAAM,cAAN,MAAkB;AAAA,EAPzB,OAOyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAId;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EAEH,YAAY,QAAgB,cAAuB;AACzD,SAAK,SAAS;AACd,SAAK,eAAe;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAgB,eAAkB,MAAc;AAC/C,WAAO,KAAK,OAAO,SAAS,QAAW,MAAM,KAAK,YAAY;AAAA,EAC/D;AACD;;;ADbO,IAAM,kBAAN,cAA8B,YAAY;AAAA,EApBjD,OAoBiD;AAAA;AAAA;AAAA,EACzC,YAAY,QAAgB;AAClC,UAAM,QAAQ,KAAK;AAAA,EACpB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,uBAAuB;AACnC,WAAO,KAAK,eAAwC,kBAAkB;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,oBAAoB;AAChC,WAAO,KAAK,eAAqC,yBAAyB;AAAA,EAC3E;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,kBAAkB;AAC9B,WAAO,KAAK,eAAmC,uBAAuB;AAAA,EACvE;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,cAAc;AAC1B,WAAO,KAAK,eAA+B,mBAAmB;AAAA,EAC/D;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,yBAAyB;AACrC,WAAO,KAAK,eAA0C,gCAAgC;AAAA,EACvF;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,kBAAkB;AAC9B,WAAO,KAAK,eAAmC,wBAAwB;AAAA,EACxE;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,wBAAwB;AACpC,WAAO,KAAK,eAAyC,8BAA8B;AAAA,EACpF;AACD;","names":[]}