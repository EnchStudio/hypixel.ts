{"version":3,"sources":["../../../../src/lib/managers/GuildManager.ts","../../../../src/lib/managers/BaseManager.ts","../../../../src/lib/errors/HypixelTSError.ts","../../../../src/lib/classes/Base.ts","../../../../src/lib/classes/Guild.ts"],"sourcesContent":["import { BaseManager } from './BaseManager';\r\nimport { HypixelTSError } from '../errors/HypixelTSError';\r\nimport { Guild } from '../classes/Guild';\r\nimport type { APIGuild } from '../typings';\r\nimport type { Client } from '../Client';\r\n\r\n/**\r\n * Guild related endpoints\r\n * @category Managers\r\n * @group Managers\r\n */\r\nexport class GuildManager extends BaseManager {\r\n\tpublic constructor(client: Client) {\r\n\t\tsuper(client, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch a guild by the guild id, or its name, or a player's guild by providing their uuid\r\n\t * @param identifier The id/name of the guild or the uuid of the player\r\n\t * @param type The type of identifier you're passing (id/name of guild, player uuid)\r\n\t */\r\n\tpublic async fetch(identifier: string, type: 'id' | 'name' | 'player') {\r\n\t\tif (!identifier) throw new HypixelTSError('METHOD_MISSING_OPTION', 'GuildManager', 'fetch', 'identifier');\r\n\t\tif (!type) throw new HypixelTSError('METHOD_MISSING_OPTION', 'GuildManager', 'fetch', 'type');\r\n\t\tif (type !== 'id' && type !== 'name' && type !== 'player')\r\n\t\t\tthrow new HypixelTSError('METHOD_INVALID_OPTIONS', 'GuildManager', 'fetch', 'type', ['id', 'name', 'player']);\r\n\r\n\t\tconst { guild } = await this.makeGetRequest<{ guild: APIGuild | null }>(`/guild?${type}=${identifier}`);\r\n\t\treturn guild ? new Guild(this.client, guild) : null;\r\n\t}\r\n}\r\n","import type { Client } from '../Client';\r\n\r\n/**\r\n * The base manager which all other managers extend from\r\n * @category Managers\r\n * @group Managers\r\n */\r\nexport class BaseManager {\r\n\t/**\r\n\t * Whether or not the manager requires API key authorization.\r\n\t */\r\n\tprotected requiresAuth: boolean;\r\n\r\n\t/**\r\n\t * The instantiated hypixel.ts client\r\n\t */\r\n\tprotected client: Client;\r\n\r\n\tpublic constructor(client: Client, requiresAuth: boolean) {\r\n\t\tthis.client = client;\r\n\t\tthis.requiresAuth = requiresAuth;\r\n\t}\r\n\r\n\t/**\r\n\t * Calls the request manager to create (and execute) requests to the API.\r\n\t *\r\n\t * **NOTE**: Do not directly use this method unless you know what you are doing. Consider using the methods provided in the managers.\r\n\t * @param path The path/endpoint of the request\r\n\t * @private\r\n\t */\r\n\tprotected async makeGetRequest<T>(path: string) {\r\n\t\treturn this.client.requests.execute<T>(path, this.requiresAuth);\r\n\t}\r\n}\r\n","type ErrorMessageSupplier = (...args: any[]) => string;\r\n\r\nconst messages = new Map<string, string | ErrorMessageSupplier>();\r\n\r\nexport class HypixelTSError extends Error {\r\n\tpublic constructor(key: string, ...args: any[]) {\r\n\t\tsuper(getMessage(key, args));\r\n\r\n\t\tfunction getMessage(key: string, args: any[]) {\r\n\t\t\tif (typeof key !== 'string') throw new Error('[getMessage]: argument key must be a string');\r\n\t\t\tconst msg = messages.get(key);\r\n\r\n\t\t\tif (!msg) throw new Error(`[getMessage]: An invalid error key was provided: ${key}`);\r\n\t\t\tif (typeof msg === 'function') return msg(...args);\r\n\t\t\tif (!args.length) return msg;\r\n\r\n\t\t\targs.unshift(msg);\r\n\t\t\treturn String(...args);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function register(name: string, value: any) {\r\n\tmessages.set(name, typeof value === 'function' ? value : String(value));\r\n}\r\n","import type { Client } from '../Client';\r\n\r\n/**\r\n * The base class which all other classes extend from.\r\n * @category Classes\r\n * @group Classes\r\n */\r\nexport class Base {\r\n\t/**\r\n\t * The instantiated hypixel.ts client.\r\n\t */\r\n\tprotected client: Client;\r\n\r\n\tpublic constructor(client: Client) {\r\n\t\tthis.client = client;\r\n\t}\r\n}\r\n","import { Base } from './Base';\r\nimport type { Client } from '../Client';\r\nimport type { APIGuild } from '../typings';\r\n\r\n/**\r\n * The guild class\r\n * @category Classes\r\n * @group Classes\r\n * @see {@link https://api.hypixel.net/#tag/Player-Data/paths/~1guild/get}\r\n */\r\nexport class Guild extends Base {\r\n\t/**\r\n\t * @param client Instantiated (and started) hypixel.ts client\r\n\t * @param data Guild data received from API\r\n\t */\r\n\tpublic constructor(client: Client, data: APIGuild) {\r\n\t\tsuper(client);\r\n\t\tdata.id = data._id;\r\n\t\tObject.assign(this, data);\r\n\t}\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACOO,IAAM,cAAN,MAAkB;AAAA,EAPzB,OAOyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAId;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EAEH,YAAY,QAAgB,cAAuB;AACzD,SAAK,SAAS;AACd,SAAK,eAAe;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAgB,eAAkB,MAAc;AAC/C,WAAO,KAAK,OAAO,SAAS,QAAW,MAAM,KAAK,YAAY;AAAA,EAC/D;AACD;;;AC/BA,IAAM,WAAW,oBAAI,IAA2C;AAEzD,IAAM,iBAAN,cAA6B,MAAM;AAAA,EAJ1C,OAI0C;AAAA;AAAA;AAAA,EAClC,YAAY,QAAgB,MAAa;AAC/C,UAAM,WAAW,KAAK,IAAI,CAAC;AAE3B,aAAS,WAAWA,MAAaC,OAAa;AAC7C,UAAI,OAAOD,SAAQ;AAAU,cAAM,IAAI,MAAM,6CAA6C;AAC1F,YAAM,MAAM,SAAS,IAAIA,IAAG;AAE5B,UAAI,CAAC;AAAK,cAAM,IAAI,MAAM,oDAAoDA,IAAG,EAAE;AACnF,UAAI,OAAO,QAAQ;AAAY,eAAO,IAAI,GAAGC,KAAI;AACjD,UAAI,CAACA,MAAK;AAAQ,eAAO;AAEzB,MAAAA,MAAK,QAAQ,GAAG;AAChB,aAAO,OAAO,GAAGA,KAAI;AAAA,IACtB;AAVS;AAAA,EAWV;AACD;;;ACbO,IAAM,OAAN,MAAW;AAAA,EAPlB,OAOkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAIP;AAAA,EAEH,YAAY,QAAgB;AAClC,SAAK,SAAS;AAAA,EACf;AACD;;;ACNO,IAAM,QAAN,cAAoB,KAAK;AAAA,EAVhC,OAUgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKxB,YAAY,QAAgB,MAAgB;AAClD,UAAM,MAAM;AACZ,SAAK,KAAK,KAAK;AACf,WAAO,OAAO,MAAM,IAAI;AAAA,EACzB;AACD;;;AJTO,IAAM,eAAN,cAA2B,YAAY;AAAA,EAX9C,OAW8C;AAAA;AAAA;AAAA,EACtC,YAAY,QAAgB;AAClC,UAAM,QAAQ,IAAI;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAa,MAAM,YAAoB,MAAgC;AACtE,QAAI,CAAC;AAAY,YAAM,IAAI,eAAe,yBAAyB,gBAAgB,SAAS,YAAY;AACxG,QAAI,CAAC;AAAM,YAAM,IAAI,eAAe,yBAAyB,gBAAgB,SAAS,MAAM;AAC5F,QAAI,SAAS,QAAQ,SAAS,UAAU,SAAS;AAChD,YAAM,IAAI,eAAe,0BAA0B,gBAAgB,SAAS,QAAQ,CAAC,MAAM,QAAQ,QAAQ,CAAC;AAE7G,UAAM,EAAE,MAAM,IAAI,MAAM,KAAK,eAA2C,UAAU,IAAI,IAAI,UAAU,EAAE;AACtG,WAAO,QAAQ,IAAI,MAAM,KAAK,QAAQ,KAAK,IAAI;AAAA,EAChD;AACD;","names":["key","args"]}