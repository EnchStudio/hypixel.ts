{"version":3,"sources":["../../../../src/lib/managers/OtherManager.ts","../../../../src/lib/managers/BaseManager.ts"],"sourcesContent":["import { BaseManager } from './BaseManager';\r\nimport { Client } from '../Client';\r\nimport type {\r\n\tActiveNetworkBoostersResponse,\r\n\tCurrentPlayerCountsResponse,\r\n\tCurrentLeaderboardsResponse,\r\n\tPunishmentStatisticsResponse\r\n} from '../typings';\r\n\r\n/**\r\n * Other endpoints\r\n * @category Managers\r\n * @group Managers\r\n * @see {@link https://api.hypixel.net/#tag/Other}\r\n */\r\nexport class OtherManager extends BaseManager {\r\n\tpublic constructor(client: Client) {\r\n\t\tsuper(client, true);\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch all active network boosters\r\n\t */\r\n\tpublic async fetchActiveNetworkBoosters(): Promise<ActiveNetworkBoostersResponse> {\r\n\t\tconst data = await this.makeGetRequest<ActiveNetworkBoostersResponse>('/boosters');\r\n\t\treturn {\r\n\t\t\tboosters: data.boosters,\r\n\t\t\tboosterState: data.boosterState\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch current player counts across all games\r\n\t */\r\n\tpublic async fetchCurrentPlayerCounts(): Promise<CurrentPlayerCountsResponse> {\r\n\t\tconst data = await this.makeGetRequest<CurrentPlayerCountsResponse>('/counts');\r\n\t\treturn {\r\n\t\t\tplayerCount: data.playerCount,\r\n\t\t\tgames: data.games\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch current leaderboards\r\n\t */\r\n\tpublic async fetchCurrentLeaderboards(): Promise<CurrentLeaderboardsResponse> {\r\n\t\tconst data = await this.makeGetRequest<CurrentLeaderboardsResponse>('/leaderboards');\r\n\t\treturn {\r\n\t\t\tleaderboards: data.leaderboards\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch punishment statistics\r\n\t */\r\n\tpublic async fetchPunishmentStatistics(): Promise<PunishmentStatisticsResponse> {\r\n\t\tconst data = await this.makeGetRequest<PunishmentStatisticsResponse>('/punishmentstats');\r\n\t\treturn {\r\n\t\t\twatchdog_lastMinute: data.watchdog_lastMinute,\r\n\t\t\tstaff_rollingDaily: data.staff_rollingDaily,\r\n\t\t\twatchdog_total: data.watchdog_total,\r\n\t\t\twatchdog_rollingDaily: data.watchdog_rollingDaily,\r\n\t\t\tstaff_total: data.staff_total\r\n\t\t};\r\n\t}\r\n}\r\n","import type { Client } from '../Client';\r\n\r\n/**\r\n * The base manager which all other managers extend from\r\n * @category Managers\r\n * @group Managers\r\n */\r\nexport class BaseManager {\r\n\t/**\r\n\t * Whether or not the manager requires API key authorization.\r\n\t */\r\n\tprotected requiresAuth: boolean;\r\n\r\n\t/**\r\n\t * The instantiated hypixel.ts client\r\n\t */\r\n\tprotected client: Client;\r\n\r\n\tpublic constructor(client: Client, requiresAuth: boolean) {\r\n\t\tthis.client = client;\r\n\t\tthis.requiresAuth = requiresAuth;\r\n\t}\r\n\r\n\t/**\r\n\t * Calls the request manager to create (and execute) requests to the API.\r\n\t *\r\n\t * **NOTE**: Do not directly use this method unless you know what you are doing. Consider using the methods provided in the managers.\r\n\t * @param path The path/endpoint of the request\r\n\t * @private\r\n\t */\r\n\tprotected async makeGetRequest<T>(path: string) {\r\n\t\treturn this.client.requests.execute<T>(path, this.requiresAuth);\r\n\t}\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACOO,IAAM,cAAN,MAAkB;AAAA,EAPzB,OAOyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAId;AAAA;AAAA;AAAA;AAAA,EAKA;AAAA,EAEH,YAAY,QAAgB,cAAuB;AACzD,SAAK,SAAS;AACd,SAAK,eAAe;AAAA,EACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EASA,MAAgB,eAAkB,MAAc;AAC/C,WAAO,KAAK,OAAO,SAAS,QAAW,MAAM,KAAK,YAAY;AAAA,EAC/D;AACD;;;ADlBO,IAAM,eAAN,cAA2B,YAAY;AAAA,EAf9C,OAe8C;AAAA;AAAA;AAAA,EACtC,YAAY,QAAgB;AAClC,UAAM,QAAQ,IAAI;AAAA,EACnB;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,6BAAqE;AACjF,UAAM,OAAO,MAAM,KAAK,eAA8C,WAAW;AACjF,WAAO;AAAA,MACN,UAAU,KAAK;AAAA,MACf,cAAc,KAAK;AAAA,IACpB;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,2BAAiE;AAC7E,UAAM,OAAO,MAAM,KAAK,eAA4C,SAAS;AAC7E,WAAO;AAAA,MACN,aAAa,KAAK;AAAA,MAClB,OAAO,KAAK;AAAA,IACb;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,2BAAiE;AAC7E,UAAM,OAAO,MAAM,KAAK,eAA4C,eAAe;AACnF,WAAO;AAAA,MACN,cAAc,KAAK;AAAA,IACpB;AAAA,EACD;AAAA;AAAA;AAAA;AAAA,EAKA,MAAa,4BAAmE;AAC/E,UAAM,OAAO,MAAM,KAAK,eAA6C,kBAAkB;AACvF,WAAO;AAAA,MACN,qBAAqB,KAAK;AAAA,MAC1B,oBAAoB,KAAK;AAAA,MACzB,gBAAgB,KAAK;AAAA,MACrB,uBAAuB,KAAK;AAAA,MAC5B,aAAa,KAAK;AAAA,IACnB;AAAA,EACD;AACD;","names":[]}