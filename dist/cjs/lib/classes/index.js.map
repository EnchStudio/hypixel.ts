{"version":3,"sources":["../../../../src/lib/classes/index.ts","../../../../src/lib/classes/Base.ts","../../../../src/lib/classes/Guild.ts","../../../../src/lib/classes/Player.ts","../../../../src/lib/classes/SkyBlockAuction.ts","../../../../src/lib/classes/SkyBlockProfile.ts","../../../../src/lib/classes/SkyBlockMuseum.ts","../../../../src/lib/errors/HypixelTSError.ts","../../../../src/lib/classes/Util.ts"],"sourcesContent":["export * from './Base';\r\n\r\nexport * from './Guild';\r\nexport * from './Player';\r\nexport * from './SkyBlockAuction';\r\nexport * from './SkyBlockProfile';\r\nexport * from './SkyBlockMuseum';\r\nexport * from './Util';\r\n","import type { Client } from '../Client';\r\n\r\n/**\r\n * The base class which all other classes extend from.\r\n * @category Classes\r\n * @group Classes\r\n */\r\nexport class Base {\r\n\t/**\r\n\t * The instantiated hypixel.ts client.\r\n\t */\r\n\tprotected client: Client;\r\n\r\n\tpublic constructor(client: Client) {\r\n\t\tthis.client = client;\r\n\t}\r\n}\r\n","import { Base } from './Base';\r\nimport type { Client } from '../Client';\r\nimport type { APIGuild } from '../typings';\r\n\r\n/**\r\n * The guild class\r\n * @category Classes\r\n * @group Classes\r\n * @see {@link https://api.hypixel.net/#tag/Player-Data/paths/~1guild/get}\r\n */\r\nexport class Guild extends Base {\r\n\t/**\r\n\t * @param client Instantiated (and started) hypixel.ts client\r\n\t * @param data Guild data received from API\r\n\t */\r\n\tpublic constructor(client: Client, data: APIGuild) {\r\n\t\tsuper(client);\r\n\t\tdata.id = data._id;\r\n\t\tObject.assign(this, data);\r\n\t}\r\n}\r\n","import { Base } from './Base';\r\nimport { Client } from '../Client';\r\nimport { APIPlayer } from '../typings';\r\n\r\nexport interface Player extends APIPlayer {}\r\n/**\r\n * The player class\r\n * @category Classes\r\n * @group Classes\r\n * @see {@link https://api.hypixel.net/#tag/Player-Data/paths/~1player/get}\r\n */\r\nexport class Player extends Base {\r\n\t/**\r\n\t * @param client Instantiated (and started) hypixel.ts client\r\n\t * @param data Player data received from API\r\n\t */\r\n\tpublic constructor(client: Client, data: APIPlayer) {\r\n\t\tsuper(client);\r\n\t\tObject.assign(this, data);\r\n\t}\r\n\r\n\t/**\r\n\t * Fetch the SkyBlock profiles of this player\r\n\t * @see {@link SkyBlockManager.fetchPlayerSkyBlockProfiles}\r\n\t */\r\n\tpublic async fetchSkyBlockProfiles() {\r\n\t\treturn this.client.skyblock.fetchPlayerSkyBlockProfiles(this.uuid);\r\n\t}\r\n}\r\n","import { Base } from './Base';\r\nimport type { Client } from '../Client';\r\nimport type { APISkyBlockAuction } from '../typings';\r\n\r\nexport interface SkyBlockAuction extends APISkyBlockAuction {}\r\n/**\r\n * The sky block auction class\r\n * @category Classes\r\n * @group Classes\r\n * @see {@link https://api.hypixel.net/#tag/SkyBlock/paths/~1skyblock~1auction/get}\r\n */\r\nexport class SkyBlockAuction extends Base {\r\n\t/**\r\n\t * @param client Instantiated (and started) hypixel.ts client\r\n\t * @param data SkyBlock auction data received from API\r\n\t */\r\n\tpublic constructor(client: Client, data: APISkyBlockAuction) {\r\n\t\tsuper(client);\r\n\t\tif ('_id' in data) data.id = data._id;\r\n\t\tObject.assign(this, data);\r\n\t}\r\n}\r\n","import { Base } from './Base';\r\nimport type { Client } from '../Client';\r\nimport type { APISkyBlockProfile } from '../typings';\r\n\r\nexport interface SkyBlockProfile extends APISkyBlockProfile {}\r\n/**\r\n * The SkyBlockProfile class.\r\n * @category Classes\r\n * @Group Classes\r\n * @see {@link https://api.hypixel.net/#tag/SkyBlock/paths/~1skyblock~1profile/get}\r\n */\r\nexport class SkyBlockProfile extends Base {\r\n\t/**\r\n\t * @param client Instantiated (and started) hypixel.ts client\r\n\t * @param data SkyBlock profile data received from API\r\n\t */\r\n\tpublic constructor(client: Client, data: APISkyBlockProfile) {\r\n\t\tsuper(client);\r\n\t\tObject.assign(this, data);\r\n\t}\r\n}\r\n","import { Base } from './Base';\r\nimport type { Client } from '../Client';\r\nimport type { APISkyBlockMuseum } from '../typings';\r\n\r\nexport interface SkyBlockMuseum extends APISkyBlockMuseum {}\r\n/**\r\n * The SkyBlockMuseum class.\r\n * @category Classes\r\n * @Group Classes\r\n */\r\nexport class SkyBlockMuseum extends Base {\r\n\t/**\r\n\t * @param client Instantiated (and started) hypixel.ts client\r\n\t * @param data SkyBlock profile data received from API\r\n\t */\r\n\tpublic constructor(client: Client, data: APISkyBlockMuseum) {\r\n\t\tsuper(client);\r\n\t\tObject.assign(this, data);\r\n\t}\r\n}\r\n","type ErrorMessageSupplier = (...args: any[]) => string;\r\n\r\nconst messages = new Map<string, string | ErrorMessageSupplier>();\r\n\r\nexport class HypixelTSError extends Error {\r\n\tpublic constructor(key: string, ...args: any[]) {\r\n\t\tsuper(getMessage(key, args));\r\n\r\n\t\tfunction getMessage(key: string, args: any[]) {\r\n\t\t\tif (typeof key !== 'string') throw new Error('[getMessage]: argument key must be a string');\r\n\t\t\tconst msg = messages.get(key);\r\n\r\n\t\t\tif (!msg) throw new Error(`[getMessage]: An invalid error key was provided: ${key}`);\r\n\t\t\tif (typeof msg === 'function') return msg(...args);\r\n\t\t\tif (!args.length) return msg;\r\n\r\n\t\t\targs.unshift(msg);\r\n\t\t\treturn String(...args);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function register(name: string, value: any) {\r\n\tmessages.set(name, typeof value === 'function' ? value : String(value));\r\n}\r\n","import { Base } from './Base';\r\nimport { HypixelTSError } from '../errors/HypixelTSError';\r\nimport type { GetUsernameResponse, GetUUIDResponse } from '../typings';\r\n\r\n/**\r\n * Utility functions\r\n * @category Classes\r\n * @group Classes\r\n */\r\nexport class Util extends Base {\r\n\t/**\r\n\t * Get the UUID of a player by providing their name\r\n\t * @param name The name of the player\r\n\t */\r\n\tpublic static async getUUID(name: string): Promise<string> {\r\n\t\ttry {\r\n\t\t\tconst data = await fetch(`https://api.mojang.com/users/profiles/minecraft/${name}`);\r\n\t\t\tconst json = (await data.json()) as GetUUIDResponse;\r\n\r\n\t\t\tif (json.errorMessage) throw new HypixelTSError('GET_UUID_ERROR', json.errorMessage, data.status);\r\n\t\t\treturn json.id;\r\n\t\t} catch {\r\n\t\t\tthrow new HypixelTSError('GET_UUID_404');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Get player's name from their UUID\r\n\t * @param uuid The uuid of the player\r\n\t */\r\n\tpublic static async getUsername(uuid: string): Promise<string> {\r\n\t\tif (!this.isUUID(uuid)) {\r\n\t\t\tthrow new HypixelTSError('NOT_UUID');\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst data = await fetch(`https://api.mojang.com/user/profile/${uuid}`);\r\n\t\t\tconst json = (await data.json()) as GetUsernameResponse;\r\n\r\n\t\t\tif (json.errorMessage) throw new HypixelTSError('GET_USERNAME_ERROR', json.errorMessage, data.status);\r\n\r\n\t\t\treturn json.name;\r\n\t\t} catch {\r\n\t\t\tthrow new HypixelTSError('GET_USERNAME_404');\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Check whether the provided UUID is a valid UUID or not\r\n\t * @param uuid The UUID to check\r\n\t */\r\n\tpublic static isUUID(uuid: string) {\r\n\t\tconst regexStripped = /^[0-9a-f]{32}$/i;\r\n\t\tconst regexFull = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}$/i;\r\n\t\treturn regexStripped.test(uuid) || regexFull.test(uuid);\r\n\t}\r\n}\r\n"],"mappings":"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","names":["key","args"]}